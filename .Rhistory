# GOV - government and military
# MED - healthcare - medical providersr
# NGO - nonprofit organizations
dt.master
dt.master
dt.master
dt.final_data_set
dt.final_data_set[order(projected_fantasy_points, decreasing = TRUE)]
dt.master
dt.master
dt.prcbreaches_final
dt.catorgs_final
merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all = TRUE)
dt.catorgs_final
dt.catorgs
unique(dt.catorgs, by = c("CatID", "OrgID"))
dt.catorgs_final
dt.prcbreaches_final
merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE)
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all = TRUE),
dt.orgsindex_final, by = c("org_id"), all = TRUE)
dt.master
merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE)
dt.categories_final
merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE)
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
dt.master
dt.orgsindex_final
dt.master
dt.prcbreaches_final
dt.orgsindex_final
unique(dt.orgsindex_final, by = c("org_id"))
dt.orgsindex_final[,.N, by = list(org_id)]
dt.orgsindex_final[,.N, by = list(org_id)][order(N)]
dt.orgsindex_final[,.N, by = list(org_id)][order(N)][N == 2]
dt.orgsindex_final
dt.orgsindex_final[org_id %in% dt.orgsindex_final[,.N, by = list(org_id)][order(N)][N == 2]$org_id]
dt.orgsindex_final[org_id %in% dt.orgsindex_final[,.N, by = list(org_id)][order(N)][N == 2]$org_id][order(org_id)]
dt.orgsindex_final
dt.orgsindex_final <- unique(dt.orgsindex_final, by = c("org_id"))
dt.orgsindex_final
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
dt.master
dt.master
dt.master[order(dt)]
dt.master
dt.master[order(dt)]
unique(dt.master[order(dt)]$dt)
unique(sort(dt.master[order(dt)]$dt))
dt.master
dt.master[grep(dt, "\\-")]
dt.master[grep(dt, "-")]
dt.master[grep(dt, "\-")]
dt.master[grep(dt, "\\-")]
dt.master
grep("123-123", "=")
grep("123-123", "-")
grep("123-123", "\-")
grep("123-123", "\\-")
grep("-", "\\-")
grep("123-123", "\\-")
grep("123-123", "-")
grep("123-123", "\-")
grep("123-123", "\\-")
grep("123/123", "/")
grep("123/123", "\\/")
grepl("123/123", "\\/")
grepl("123-123", "-")
grepl("123-123", "\\-")
dt.master[grepl("\\-", dt)]
dt.master
dt.master[grepl("\\/", dt)]
dt.master[grepl("\\-", dt)]
dt.master[grepl("\\/", dt)]
1137 + 2989
dt.master[grepl("\\-", dt)]
dt.master[grepl("\\/", dt)]$dt <- as.Date(dt.master[grepl("\\-", dt)]$dt, format = "%m/%d/%y")
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
dt.master[grepl("\\-", dt)]$dt <- as.Date(dt.master[grepl("\\-", dt)]$dt, format = "%d-%b-%y")
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
as.Date(dt.master[grepl("\\-", dt)]$dt, format = "%d-%b-%y")
dt.master[grepl("\\-", dt)]$dt
dt.master[grepl("\\-", dt)]$dt <- as.Date(dt.master[grepl("\\-", dt)]$dt, format = "%d-%b-%y")
dt.master[grepl("\\/", dt)]$dt <- as.Date(dt.master[grepl("\\-", dt)]$dt, format = "%m/%d/%y")
dt.master
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
dt.date_format1 <- dt.master[grepl("\\-", dt)]
dt.date_format2 <- dt.master[grepl("\\/", dt)]
dt.date_format1$dt <- as.Date(dt.master[grepl("\\-", dt)]$dt, format = "%d-%b-%y")
dt.date_format1
dt.date_format1 <- dt.master[grepl("\\-", dt)]
dt.date_format1 <- dt.master[grepl("\\-", dt)]
dt.date_format1$dt <- as.Date(dt.date_format1, format = "%d-%b-%y")
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
dt.date_format1 <- dt.master[grepl("\\-", dt)]
dt.date_format1$dt <- as.Date(dt.date_format1, format = "%d-%b-%y")
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
dt.date_format1 <- dt.master[grepl("\\-", dt)]
dt.date_format1$dt <- as.Date(dt.date_format1$dt, format = "%d-%b-%y")
dt.date_format2 <- dt.master[grepl("\\/", dt)]
dt.date_format2$dt <- as.Date(dt.date_format2$dt, format = "%m/%d/%y")
dt.date_format2
dt.final <- rbind(dt.date_format1,
dt.date_format2)
dt.final
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
dt.date_format1 <- dt.master[grepl("\\-", dt)]
dt.date_format1$dt <- as.Date(dt.date_format1$dt, format = "%d-%b-%y")
dt.date_format1
dt.date_format1[order(dt)]
dt.master
dt.master$breach_id <- 1:nrow(dt.master)
dt.master
dt.date_format1 <- dt.master[grepl("\\-", dt)]
dt.date_format1$dt <- as.Date(dt.date_format1$dt, format = "%d-%b-%y")
dt.date_format2 <- dt.master[grepl("\\/", dt)]
dt.date_format2$dt <- as.Date(dt.date_format2$dt, format = "%m/%d/%y")
dt.date_format2
dt.final <- rbind(dt.date_format1,
dt.date_format2)
dt.final
dt.final[order(dt)]
dt.master
dt.master[breach_id == 675]
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
dt.master$breach_id <- 1:nrow(dt.master)
dt.date_format1 <- dt.master[grepl("\\-", dt)]
dt.date_format1 <- dt.master[grepl("\\-", dt)]
dt.date_format1
dt.date_format2 <- dt.master[grepl("\\/", dt)]
dt.date_format2
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
dt.master$breach_id <- 1:nrow(dt.master)
dt.date_format1 <- dt.master[grepl("\\-", dt)]
dt.date_format1$dt <- as.Date(dt.date_format1$dt, format = "%d-%b-%y")
dt.final <- rbind(dt.date_format1,
dt.date_format2)
dt.date_format2$dt <- as.Date(dt.date_format2$dt, format = "%m/%d/%Y")
dt.date_format2 <- dt.master[grepl("\\/", dt)]
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
dt.master$breach_id <- 1:nrow(dt.master)
dt.date_format1 <- dt.master[grepl("\\-", dt)]
dt.date_format1$dt <- as.Date(dt.date_format1$dt, format = "%d-%b-%y")
dt.date_format2 <- dt.master[grepl("\\/", dt)]
dt.date_format2$dt <- as.Date(dt.date_format2$dt, format = "%m/%d/%Y")
dt.date_format2
dt.final <- rbind(dt.date_format1,
dt.date_format2)
dt.final
dt.final[order(dt)]
# Fix region
dt.region <- dt.master[,list(region, state)]
dt.region
# Fix region
dt.region <- dt.master[!is.na(region)][,list(region, state)]
dt.region
unique(dt.region)
# Fix region
dt.region <- unique(dt.master[!is.na(region)][,list(region, state)])
dt.region
dt.region <- dt.region[region != " "]
dt.region
dt.region
dt.master
dt.master
dt.master[grepl("  ", state)]
dt.region
dt.region
dt.master
dt.region
dt.region[,.N, by = list(state)]
dt.master
dt.region
dt.master
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
# Fix region
dt.region <- unique(dt.master[!is.na(region)][,list(region, state)])
# Merge it backc on
dt.master[,region := NULL]
dt.master <- merge(dt.master, dt.region, by = c("state"))
dt.master
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
# Fix region
dt.region <- unique(dt.master[!is.na(region)][,list(region, state)])
# Merge it backc on
dt.master[,region := NULL]
dt.master
dt.region
merge(dt.master, dt.region, by = c("state"))
# Fix region
dt.region <- unique(dt.master[!is.na(region)][,list(region, state)])
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
# Fix region
dt.region <- unique(dt.master[!is.na(region)][,list(region, state)])
# Merge it backc on
dt.master[,region := NULL]
dt.master <- merge(dt.master, dt.region, by = c("state"), all.x = TRUE)
dt.master
dt.master <- merge(merge(merge(dt.prcbreaches_final, dt.catorgs_final, by = c("cat_id", "org_id"), all.x = TRUE),
dt.categories_final, by = c("cat_id"), all.x = TRUE),
dt.orgsindex_final, by = c("org_id"), all.x = TRUE)
# Fix region
dt.region <- unique(dt.master[!is.na(region)][,list(region, state)])
# Merge it backc on
dt.master[,region := NULL]
dt.master <- merge(dt.master, dt.region, by = c("state"), all.x = TRUE)
# Add unique identifier to each breach
dt.master$breach_id <- 1:nrow(dt.master)
dt.date_format1 <- dt.master[grepl("\\-", dt)]
dt.date_format1$dt <- as.Date(dt.date_format1$dt, format = "%d-%b-%y")
dt.date_format2 <- dt.master[grepl("\\/", dt)]
dt.date_format2$dt <- as.Date(dt.date_format2$dt, format = "%m/%d/%Y")
dt.final <- rbind(dt.date_format1,
dt.date_format2)
dt.final
dt.final$state
dt.final
colnames(dt.final)
dt.region
dt.final
write.csv(glue("{parent_dir}/health_care_data/master.csv"))
write.csv(dt.final, glue("{parent_dir}/health_care_data/master.csv"))
dirname(rstudioapi::getSourceEditorContext()$path)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
setwd('..')
parent_dir <- getwd()
dt.master <-fread(glue("{parent_dir}/health_care_data/master.csv"))
dt.master
dt.master
dt.master[order(dg)]
dt.master[order(dt)]
dt.data <- fread("~/GitHub/edav_final_project/health_care_data/master.csv")
dt.data
dt.time_series <- dt.data[,list(dt, breanch_id)]
dt.data <- fread("~/GitHub/edav_final_project/health_care_data/master.csv")
dt.time_series <- dt.data[,list(dt, breach_id)]
dt.time_series
dt.time_series <- dt.time_series[order(dt)]
dt.timem_series
dt.time_series
dt.time_series <- dt.time_series[,.N, by = list(dt)]
dt.time_series
colnames(dt.time_series) <- c("date", "number_of_breach_occurences")
dt.data <- fread("~/GitHub/edav_final_project/health_care_data/master.csv")
dt.time_series <- dt.data[,list(dt, breach_id)]
dt.time_series <- dt.time_series[order(dt)]
dt.time_series <- dt.time_series[,.N, by = list(dt)]
colnames(dt.time_series) <- c("date", "num_breach")
dt.time_series
dt.time_series <- dt.data[,list(dt, breach_id)]
dt.time_series <- dt.time_series[order(dt)]
colnames(dt.time_series) <- c("date", "num_breach")
dt.time_series
dt.time_series <- dt.data[,list(dt, breach_id)]
dt.time_series <- dt.time_series[order(dt)]
dt.time_series
dt.data
dt.data
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
dt.time_series
dt.data
dt.time_series
dt.year <- dt.time_series[,.N, by = year(dt)]
dt.year
ggplot(dt.year, aes(x = year, y = N)) + geom_bar(stat = "identity", fill = "lightblue") + theme_bw(base_size = 15) + xlab("Year") + ylab("Number of breach instances")
library(data.table)
library(ggplot2)
library(lubridate)
dt.data <- fread("~/GitHub/edav_final_project/health_care_data/master.csv")
dt.time_series <- dt.data[,list(dt, breach_id)]
dt.time_series <- dt.time_series[order(dt)]
dt.year <- dt.time_series[,.N, by = year(dt)]
ggplot(dt.year, aes(x = year, y = N)) + geom_bar(stat = "identity", fill = "lightblue") + theme_bw(base_size = 15) + xlab("Year") + ylab("Number of breach instances")
dt.year
dt.data
ggplot(dt.year, aes(x = year, y = N)) + geom_bar(stat = "identity", fill = "lightblue") + theme_bw(base_size = 15) + xlab("Year") + ylab("Number of breach instances") + ggtitle("Number of data breaches from 2005 until 2018") + scale_x_datetime(date_breaks = "1 year")
ggplot(dt.year, aes(x = year, y = N)) + geom_bar(stat = "identity", fill = "lightblue") + theme_bw(base_size = 15) + xlab("Year") + ylab("Number of breach instances") + ggtitle("Number of data breaches from 2005 until 2018") + scale_x_date(date_breaks = "1 year")
ggplot(dt.year, aes(x = year, y = N)) + geom_bar(stat = "identity", fill = "lightblue") + theme_bw(base_size = 15) + xlab("Year") + ylab("Number of breach instances") + ggtitle("Number of data breaches from 2005 until 2018") + scale_x_date(date_breaks = "1 years")
ggplot(dt.year, aes(x = year, y = N)) + geom_bar(stat = "identity", fill = "lightblue") + theme_bw(base_size = 15) + xlab("Year") + ylab("Number of breach instances") + ggtitle("Number of data breaches from 2005 until 2018") + scale_x_date(date_breaks = "1 year")
ggplot
dt.year
library(data.table)
library(ggplot2)
library(lubridate)
dt.data <- fread("~/GitHub/edav_final_project/health_care_data/master.csv")
dt.time_series <- dt.data[,list(dt, breach_id)]
dt.time_series <- dt.time_series[order(dt)]
dt.year <- dt.time_series[,.N, by = year(dt)]
dt.year[,year := as.Date(paste0(year, "-01-01"))]
ggplot(dt.year, aes(x = year, y = N)) + geom_bar(stat = "identity", fill = "lightblue") + theme_bw(base_size = 15) + xlab("Year") + ylab("Number of breach instances") + ggtitle("Number of data breaches from 2005 until 2018") + scale_x_date(date_breaks = "1 year")
ggplot(dt.year, aes(x = year, y = N)) + geom_bar(stat = "identity", fill = "lightblue") + theme_bw(base_size = 15) + xlab("Year") + ylab("Number of breach instances") + ggtitle("Number of data breaches from 2005 until 2018") + scale_x_date(date_breaks = "2 years")
dt.year
dt.data
dt.time_series
dt.month <- dt.time_series[,list(dt = paste0(year(dt), "-", month(dt), "-01"), breach_id)]
dt.month
month("2018-01-01")
months("2018-01-01")
month("2018-01-01")
dt.time_series
dt.month <- dt.time_series
dt.month
days(dt.month)
days(dt.month$dt)
day(dt.month$dt)
dt.month <- dt.time_series
day(dt.month$dt) <- 1
dt.month <- dt.time_series
day(dt.month$dt) <- "01"
dt.month <- dt.time_series
dt.month$dt <- floor_date(dt.month$dt)
dt.month <- dt.time_series
dt.month$dt <- floor_date(as.Date(dt.month$dt))
dt.month
dt.month <- dt.time_series
dt.month$dt <- floor_date(as.Date(dt.month$dt), "month")
dt.month
dt.month <- dt.time_series
dt.month$dt <- floor_date(as.Date(dt.month$dt), "month")
dt.month <- dt.month[,.N, by = dt]
dt.month
ggplot(dt.month, aes(x = dt, y = N)) + geom_bar(stat = "identity", fill = "lightblue") + theme_bw(base_size = 15) + xlab("Date") + ylab("Number of breach instances") + ggtitle("Number of data breaches from 2005 until 2018")
dt.month
dt.month
dt.month <- dt.time_series
dt.month$dt <- floor_date(as.Date(dt.month$dt), "month")
dt.month <- dt.month[,.N, by = dt]
dt.month[,year := year(dt)]
dt.month[,month := month(dt)]
dt.month
ggplot(dt.month, aes(x = year, y = N)) + geom_point() + theme_bw(base_size = 15) + xlab("Date") + ylab("Number of breach instances") + ggtitle("Number of data breaches from 2005 until 2018") + facet_wrap(~month)
ggplot(dt.month, aes(x = month, y = N)) + geom_point() + theme_bw(base_size = 15) + xlab("Date") + ylab("Number of breach instances") + ggtitle("Number of data breaches from 2005 until 2018") + facet_wrap(~year)
dt.month <- dt.time_series
dt.month$dt <- floor_date(as.Date(dt.month$dt), "month")
dt.month <- dt.month[,.N, by = dt]
dt.month[,year := year(dt)]
dt.month[,month := month(dt)]
ggplot(dt.month, aes(x = year, y = N)) + geom_point() + theme_bw(base_size = 15) + xlab("Date") + ylab("Number of breach instances") + ggtitle("Number of data breaches from 2005 until 2018") + facet_wrap(~month)
ggplot(dt.month, aes(x = month, y = N)) + geom_point() + theme_bw(base_size = 15) + xlab("Date") + ylab("Number of breach instances") + ggtitle("Number of data breaches from 2005 until 2018") + facet_wrap(~year)
ggplot(dt.month, aes(x = year, y = N)) + geom_point() + theme_bw(base_size = 15) + xlab("Date") + ylab("Number of breach instances") + ggtitle("Number of data breaches from 2005 until 2018") + facet_wrap(~month)
ggplot(dt.month, aes(x = month, y = N)) + geom_point() + theme_bw(base_size = 15) + xlab("Date") + ylab("Number of breach instances") + ggtitle("Number of data breaches from 2005 until 2018") + facet_wrap(~year)
dt.data
dt.data[nchar(state) > 2]
dt.states <- dt.data[nchar(state) > 2][,list(dt, state, breach_id)]
dt.states
dt.states
dt.states[,.N, by = state]
library(choroplethr)
choroplethr(dt.states[,.N, by = state], lod="state")
state_choroplethr(dt.states[,.N, by = state])
state_choropleth(dt.states[,.N, by = state])
library(choroplethr)
dt.states <- dt.data[nchar(state) > 2][,list(dt, state, breach_id)]
dt.map <- dt.states[,.N, by = state]
colnames(dt.map) <- c("region", "value")
state_choropleth(dt.states[,.N, by = state])
state_choropleth(dt.map)
dt.map
states
state.name
library(choroplethr)
dt.states <- dt.data[nchar(state) > 2][,list(dt, state, breach_id)]
dt.map <- dt.states[,.N, by = state]
dt.map <- dt.map[state %in% state.name]
colnames(dt.map) <- c("region", "value")
state_choropleth(dt.map)
state.abb
dt.map
dt.map[order(Region)]
dt.map[order(region)]
library(choroplethr)
dt.states <- dt.data[nchar(state) > 2][,list(dt, state, breach_id)]
dt.map <- dt.states[,.N, by = state]
dt.map <- dt.map[state %in% state.name]
colnames(dt.map) <- c("region", "value")
dt.map[order(region)]$region <- state.abb
state_choropleth(dt.map)
library(choroplethr)
dt.states <- dt.data[nchar(state) > 2][,list(dt, state, breach_id)]
dt.map <- dt.states[,.N, by = state]
dt.map <- dt.map[state %in% state.name]
colnames(dt.map) <- c("region", "value")
state_choropleth(data.frame(dt.map))
data(df_pop_state)
df_pop_state
library(choroplethr)
dt.states <- dt.data[nchar(state) > 2][,list(dt, state, breach_id)]
dt.map <- dt.states[,.N, by = state]
dt.map <- dt.map[state %in% state.name]
dt.map$region <- tolower(dt.map$region)
colnames(dt.map) <- c("region", "value")
state_choropleth(data.frame(dt.map))
dt.states <- dt.data[nchar(state) > 2][,list(dt, state, breach_id)]
dt.map <- dt.states[,.N, by = state]
dt.map <- dt.map[state %in% state.name]
dt.map$region <- tolower(dt.map$region)
dt.map
library(choroplethr)
dt.states <- dt.data[nchar(state) > 2][,list(dt, state, breach_id)]
dt.map <- dt.states[,.N, by = state]
dt.map <- dt.map[state %in% state.name]
dt.map$state <- tolower(dt.map$state)
colnames(dt.map) <- c("region", "value")
state_choropleth(data.frame(dt.map))
dt.map
dt.data
dt.time_series
dt.date
dt.data
dt.states <- dt.data[nchar(region) > 2][,list(dt, region, breach_id)]
dt.states
dt.statesdt.states <- dt.data[nchar(region) > 2][,list(dt, region, breach_id)]
dt.states_num <- dt.states[,.N, by = list(dt, region)]
dt.states <- dt.data[nchar(region) > 2][,list(dt, region, breach_id)]
dt.states_num <- dt.states[,.N, by = list(dt, region)]
dt.states_num
dt.states <- dt.data[nchar(region) > 2][,list(dt, region, breach_id)]
dt.states$dt <- floor_date(as.Date(dt.states$dt), "month")
dt.states_num <- dt.states[,.N, by = list(dt, region)]
dt.states_num
ggplot(dt.states_num, aes(x = dt, y = N, color = region)) + geom_line(size = 1.5) + xlab("Date") + ylab("Number of breach instances") +
scale_color_discrete(palette = "set1")
ggplot(dt.states_num, aes(x = dt, y = N, color = region)) + geom_line(size = 1.5) + xlab("Date") + ylab("Number of breach instances") +
scale_color_discrete(pallette = "set1")
ggplot(dt.states_num, aes(x = dt, y = N, color = region)) + geom_line(size = 1.5) + xlab("Date") + ylab("Number of breach instances") +
scale_color_brewer(palette = "set1")
ggplot(dt.states_num, aes(x = dt, y = N, color = region)) + geom_line(size = 1.5) + xlab("Date") + ylab("Number of breach instances") +
scale_color_brewer(palette = "Set1")
dt.states <- dt.data[nchar(region) > 2][,list(dt, region, breach_id)]
dt.states$dt <- floor_date(as.Date(dt.states$dt), "month")
dt.states_num <- dt.states[,.N, by = list(dt, region)]
ggplot(dt.states_num, aes(x = dt, y = N, color = region)) + geom_line(size = 1.5) + xlab("Date") + ylab("Number of breach instances") +
scale_color_brewer(palette = "set1") + theme_bw(base_size = 20)
ggplot(dt.states_num, aes(x = dt, y = N, color = region)) + geom_line(size = 1.5) + xlab("Date") + ylab("Number of breach instances") +
scale_color_brewer(palette = "Set1") + theme_bw(base_size = 15)
ggplot(dt.states_num, aes(x = dt, y = N, fill = region)) + geom_bar(stat = "identity", position = "dodge") +
xlab("Date") + ylab("Number of breach instances") +
scale_color_brewer(palette = "Set1") + theme_bw(base_size = 15)
dt.states <- dt.data[nchar(region) > 2][,list(dt, region, breach_id)]
dt.states$dt <- year(as.Date(dt.states$dt))
dt.states_num <- dt.states[,.N, by = list(dt, region)]
ggplot(dt.states_num, aes(x = dt, y = N, fill = region)) + geom_bar(stat = "identity", position = "dodge") +
xlab("Date") + ylab("Number of breach instances") +
scale_color_brewer(palette = "Set1") + theme_bw(base_size = 15)
dt.states <- dt.data[nchar(region) > 2][,list(dt, region, breach_id)]
dt.states$dt <- year(as.Date(dt.states$dt))
dt.states_num <- dt.states[,.N, by = list(dt, region)]
ggplot(dt.states_num, aes(x = dt, y = N, fill = region)) + geom_bar(stat = "identity") +
xlab("Date") + ylab("Number of breach instances") +
scale_fill_brewer(palette = "Set1") + theme_bw(base_size = 15)
dt.states <- dt.data[nchar(region) > 2][,list(dt, region, breach_id)]
dt.states$dt <- year(as.Date(dt.states$dt))
dt.states_num <- dt.states[,.N, by = list(dt, region)]
ggplot(dt.states_num, aes(x = dt, y = N, fill = region)) + geom_bar(stat = "identity") +
xlab("Date") + ylab("Number of breach instances") +
scale_fill_brewer(palette = "Set1") + theme_bw(base_size = 15) + scale_y_log10() + scale_x_date(date_breaks = "2 years")
dt.states <- dt.data[nchar(region) > 2][,list(dt, region, breach_id)]
dt.states$dt <- floor_date(as.Date(dt.states$dt), "year")
dt.states <- dt.data[nchar(region) > 2][,list(dt, region, breach_id)]
dt.states$dt <- floor_date(as.Date(dt.states$dt), "year")
dt.states_num <- dt.states[,.N, by = list(dt, region)]
ggplot(dt.states_num, aes(x = dt, y = N, fill = region)) + geom_bar(stat = "identity") +
xlab("Date") + ylab("Number of breach instances") +
scale_fill_brewer(palette = "Set1") + theme_bw(base_size = 15) + scale_y_log10() + scale_x_date(date_breaks = "2 years")
dt.states <- dt.data[nchar(region) > 2][,list(dt, region, breach_id)]
dt.states$dt <- floor_date(as.Date(dt.states$dt), "year")
dt.states
dt.states_num <- dt.states[,.N, by = list(dt, region)]
dt.states_num
dt.states <- dt.data[nchar(region) > 2][,list(dt, region, breach_id)]
dt.states$dt <- floor_date(as.Date(dt.states$dt), "year")
dt.states_num <- dt.states[,.N, by = list(dt, region)]
ggplot(dt.states_num, aes(x = dt, y = N, fill = region)) + geom_bar(stat = "identity") +
xlab("Date") + ylab("Number of breach instances") +
scale_fill_brewer(palette = "Set1") + theme_bw(base_size = 15) + scale_x_date(date_breaks = "2 years")
